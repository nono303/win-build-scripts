Usage: go command [options]
---------------------------
- build command:
  * standalone: 
      apr
      brotli
      bzip2
      c-ares
      curl
      dependencies
      freetype2
      geographiclib
      geos
      httpd
      jansson
      jemalloc
      jpeg
      libev
      libevent
      libexpat
      libffi
      libiconv
      liblzma
      libmaxminddb
      libpng
      libssh2
      libtiff
      libxdiff
      libxml2
      libxpm
      libzip
      lua
      mapsforgesrv
      memcached
      mobac
      nghttp2
      nssm
      openssl
      pcre
      php
      proj
      sdlna
      serf
      sqlite
      subversion
      tidy
      verpatch
      wineditline
      zlib
  * suite: 
      httpdanddeps:      all depencies and httpd
      subversionanddeps: all depencies and subversion. httpdanddeps MUST BE DONE PREVIOUSLY! 
      phpanddeps:        all depencies and php NTS. httpdanddeps MUST BE DONE PREVIOUSLY! 
      all:               all depencies and httpd, subversion and php NTS.
- build options:
    all:     build 'command' for all target combinations (vc15, vs16, vs17 / x86, x64 / sse2, avx)
    nolog:   don't tee stderr & stdout to a logfile in %PATH_LOGS% (...and show console colors)
    verbose: disable all batch echo off and silent build option
    keepsrc: don't clean, reset and potentially apply patch in src dir 
---------------------------
- util command:
  * logcheck: check logfile(s) in to find 'strange' (warn, error, fatal...) loglines
    > param: MUST HAVE ONE OF THEM
        full:           check all logfiles present in %PATH_LOGS%
	last:           check last logfile present in %PATH_LOGS%
	<filename.log>: check specified logfile if present in %PATH_LOGS%
  * srcstatus: get status (tag, revision, branch, commit behind...) of all src dir present in %PATH_SRC%, fetch remote scm and export a summarized csv file in %PATH_LOGS%
               update srccreate with current your state
    > option:
        gitcg:   do a GIT garbage collector on all git scm
	nofetch: don't fetch remote
	verbose: display all scm commands
  * srccreate: git clone & svn co all required src into %PATH_SRC% defined in env.bat
  * bininfo: check all binaries released (exe dll so) for datetime, MSVC version, architecture and option, 'StringFileInfo' embedded and export a summarized csv file in %PATH_LOGS%
    > param: a path or a file to check
    > option:
        checkavx: test cpu instruction to check if AVX are present (slow)
	updaterc: update StringFileInfo with build details (arch, MSVC version...)
	recurse:  check subdir
	ext:[ex1,ex2...]: by default, bininfo check *.exe *.dll *.so. you can override (extend or restric) these extensions with a comma separated list (without space) of extension to be checked. ex. ext:exe,dll
	nb:[int]: number of file that must be present (and not only checked) in path param. can't be used with a file in param or recurse option
  * version: output and write csv file in %PATH_LOG% of current normalized version of each module present in %PATH_SRC%
  * configexport: export cygwin and MSVS config to %PATH_BATCH%\config. 
                  import .vsconfg for MSVS 
		  use setup.exe -P `awk 'NR==1{printf \$1}{printf ",%s", \$1}' cyg_XX_.packagelist` for cygwin (where _XX_ is 32 or 64...)
  * curlperf: test curl tls performances between WinSSL & OpenSSL for curl.exe and php_curl extension
---------------------------