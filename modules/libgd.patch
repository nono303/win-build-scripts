diff --git "a/CMakeLists.txt" "b/CMakeLists.txt"
index 0f488518..0a2a1a7e 100644
--- "a/CMakeLists.txt"
+++ "b/CMakeLists.txt"
@@ -26,6 +26,11 @@ OPTION(ENABLE_ASAN "Enable (gcc) ASAN support" 0)
 OPTION(ENABLE_CPP "Enable CPP GD API" 1)
 OPTION(VERBOSE_MAKEFILE "Enable CMAKE_VERBOSE_MAKEFILE" 0)
 
+OPTION(BUILD_TESTS "Build tests" 0)
+OPTION(BUILD_EXEMPLES "Build exemples" 0)
+OPTION(BUILD_DOCS "Build docs" 0)
+OPTION(BUILD_CPACK "Build CPACK" 0)
+
 if (VERBOSE_MAKEFILE)
 	set(CMAKE_VERBOSE_MAKEFILE ON)
 endif (VERBOSE_MAKEFILE)
@@ -142,7 +147,7 @@ else (USE_EXT_GD)
 	ENDIF (ENABLE_HEIF)
 
 	IF (ENABLE_AVIF)
-		FIND_PACKAGE(libavif 0.8.2 REQUIRED CONFIG)
+		FIND_PACKAGE(libavif REQUIRED)
 		SET(HAVE_LIBAVIF 1)
 		SET(AVIF_LIBRARIES avif)
 		SET(AVIF_FOUND 1)
@@ -298,59 +303,64 @@ else (USE_EXT_GD)
 	add_subdirectory(src)
 endif (USE_EXT_GD)
 
-add_subdirectory(tests)
-add_subdirectory(examples)
-add_subdirectory(docs)
-
 add_custom_target(distclean ${GD_SOURCE_DIR}/cmake/distclean.sh)
 
-SET(CPACK_PACKAGE_NAME "libgd")
-SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "libGD, powerful and easy to use graphic library")
-SET(CPACK_PACKAGE_VENDOR "https://www.libgd.org")
-SET(CPACK_PACKAGE_VERSION_MAJOR ${GDLIB_MAJOR})
-SET(CPACK_PACKAGE_VERSION_MINOR ${GDLIB_MINOR})
-SET(CPACK_PACKAGE_VERSION_PATCH ${GDLIB_REVISION}${GDLIB_EXTRA})
-
-if(WIN32)
-	set(CPACK_GENERATOR ZIP)
-else(WIN32)
-	set(CPACK_GENERATOR TGZ)
-endif(WIN32)
-
-
-INSTALL(FILES docs/INSTALL DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-INSTALL(FILES docs/README.JPN DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-INSTALL(FILES docs/README.CMAKE DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-INSTALL(FILES docs/README.TESTING DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-INSTALL(FILES docs/README.TXT DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-
-
-INSTALL(FILES examples/arc.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-INSTALL(FILES examples/copyrotated.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-INSTALL(FILES examples/crop.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-INSTALL(FILES examples/flip.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-INSTALL(FILES examples/gif.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-INSTALL(FILES examples/nnquant.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-INSTALL(FILES examples/noIcon.pic DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-INSTALL(FILES examples/noIcon.sgi DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-INSTALL(FILES examples/noIcon.tga DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-INSTALL(FILES examples/noIconAlpha.tga DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-INSTALL(FILES examples/test_crop_threshold.png DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-INSTALL(FILES examples/tgaread.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-INSTALL(FILES examples/tiffread.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-INSTALL(FILES examples/windows.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
-
-
-set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/COPYING")
-
-set(CPACK_SOURCE_GENERATOR TGZ)
-set(CPACK_SOURCE_IGNORE_FILES
-"~$"
-"\\\\.swp$"
-"\\\\.gitignore$"
-"^${PROJECT_SOURCE_DIR}/debian/"
-"^${PROJECT_SOURCE_DIR}/old/"
-"^${PROJECT_SOURCE_DIR}/bld/"
-)
-install(FILES ${top_level_DOCFILES} DESTINATION ${DOC_DIR})
-INCLUDE(CPack)
+if(BUILD_TESTS)
+	add_subdirectory(tests)
+endif (BUILD_TESTS)
+
+if(BUILD_EXEMPLES)
+	add_subdirectory(examples)
+	INSTALL(FILES examples/arc.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+	INSTALL(FILES examples/copyrotated.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+	INSTALL(FILES examples/crop.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+	INSTALL(FILES examples/flip.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+	INSTALL(FILES examples/gif.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+	INSTALL(FILES examples/nnquant.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+	INSTALL(FILES examples/noIcon.pic DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+	INSTALL(FILES examples/noIcon.sgi DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+	INSTALL(FILES examples/noIcon.tga DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+	INSTALL(FILES examples/noIconAlpha.tga DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+	INSTALL(FILES examples/test_crop_threshold.png DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+	INSTALL(FILES examples/tgaread.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+	INSTALL(FILES examples/tiffread.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+	INSTALL(FILES examples/windows.c DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+endif(BUILD_EXEMPLES)
+
+if(BUILD_DOCS)
+	add_subdirectory(docs)
+	INSTALL(FILES docs/INSTALL DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+	INSTALL(FILES docs/README.JPN DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+	INSTALL(FILES docs/README.CMAKE DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+	INSTALL(FILES docs/README.TESTING DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+	INSTALL(FILES docs/README.TXT DESTINATION share/doc/gd-${GDLIB_MAJOR}.${GDLIB_MINOR})
+endif(BUILD_DOCS)
+
+if(BUILD_CPACK)
+	SET(CPACK_PACKAGE_NAME "libgd")
+	SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "libGD, powerful and easy to use graphic library")
+	SET(CPACK_PACKAGE_VENDOR "https://www.libgd.org")
+	SET(CPACK_PACKAGE_VERSION_MAJOR ${GDLIB_MAJOR})
+	SET(CPACK_PACKAGE_VERSION_MINOR ${GDLIB_MINOR})
+	SET(CPACK_PACKAGE_VERSION_PATCH ${GDLIB_REVISION}${GDLIB_EXTRA})
+
+	if(WIN32)
+		set(CPACK_GENERATOR ZIP)
+	else(WIN32)
+		set(CPACK_GENERATOR TGZ)
+	endif(WIN32)
+
+	set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/COPYING")
+
+	set(CPACK_SOURCE_GENERATOR TGZ)
+	set(CPACK_SOURCE_IGNORE_FILES
+	"~$"
+	"\\\\.swp$"
+	"\\\\.gitignore$"
+	"^${PROJECT_SOURCE_DIR}/debian/"
+	"^${PROJECT_SOURCE_DIR}/old/"
+	"^${PROJECT_SOURCE_DIR}/bld/"
+	)
+	install(FILES ${top_level_DOCFILES} DESTINATION ${DOC_DIR})
+	INCLUDE(CPack)
+endif(BUILD_CPACK)
\ No newline at end of file

diff --git a/src/config.h.cmake b/src/config.h.cmake
index 05429428..a936a219 100644
--- a/src/config.h.cmake
+++ b/src/config.h.cmake
@@ -142,3 +142,7 @@
 
 /* Version number of package */
 #cmakedefine VERSION
+
+#ifdef _MSC_VER
+#define ssize_t SSIZE_T
+#endif
