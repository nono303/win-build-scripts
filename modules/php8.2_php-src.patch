diff --git "a/main/network.c" "b/main/network.c"
index 1ad7e370cc..9cc9de2a2c 100644
--- "a/main/network.c"
+++ "b/main/network.c"
@@ -104,7 +104,7 @@ static const char *php_gai_strerror(int code)
 		int code;
 		const char *msg;
 	} values[] = {
-#  ifdef EAI_ADDRFAMILY
+#  ifdef EAI_ADDRFAMILY /* Not available in MSVC */
 		{EAI_ADDRFAMILY, "Address family for hostname not supported"},
 #  endif
 		{EAI_AGAIN, "Temporary failure in name resolution"},
@@ -112,13 +112,15 @@ static const char *php_gai_strerror(int code)
 		{EAI_FAIL, "Non-recoverable failure in name resolution"},
 		{EAI_FAMILY, "ai_family not supported"},
 		{EAI_MEMORY, "Memory allocation failure"},
-#  ifdef EAI_NODATA
+#  ifdef EAI_NODATA /* Not available in MSVC */
 		{EAI_NODATA, "No address associated with hostname"},
 #  endif
 		{EAI_NONAME, "Name or service not known"},
 		{EAI_SERVICE, "Servname not supported for ai_socktype"},
 		{EAI_SOCKTYPE, "ai_socktype not supported"},
+#  ifdef EAI_SYSTEM /* Not available in MSVC */
 		{EAI_SYSTEM, "System error"},
+#  endif
 		{0, NULL}
 	};
 	int i;
diff --git "a/ext/iconv/iconv.c" "b/ext/iconv/iconv.c"
index c0286de7bb..e98c63c9bd 100644
--- "a/ext/iconv/iconv.c"
+++ "b/ext/iconv/iconv.c"
@@ -61,7 +61,7 @@ char *get_iconv_version(void) {
 
 #ifdef HAVE_LIBICONV
 	static char buf[16];
-	snprintf(buf, sizeof(buf), "%d.%d", _libiconv_version >> 8, _libiconv_version & 0xff);
+	snprintf(buf, sizeof(buf), "%d.%d", _LIBICONV_VERSION >> 8, _LIBICONV_VERSION & 0xff);
 	version = buf;
 #elif HAVE_GLIBC_ICONV
 	version = (char *) gnu_get_libc_version();

diff --git "a/ext/phar/config.w32" "b/ext/phar/config.w32"
index c68ba08f2c..241f3eeddb 100644
--- "a/ext/phar/config.w32"
+++ "b/ext/phar/config.w32"
@@ -13,10 +13,10 @@ if (PHP_PHAR != "no") {
 		ADD_FLAG("CFLAGS_PHAR", "/D COMPILE_DL_PHAR ");
 	}
 	if (PHP_PHAR_NATIVE_SSL != "no") {
-		if (CHECK_LIB("libeay32st.lib", "phar")) {
+		if (CHECK_LIB("libcrypto.lib", "phar")) {
 			/* We don't really need GDI for this, but there's no
 			way to avoid linking it in the static openssl build */
-			ADD_FLAG("LIBS_PHAR", "libeay32st.lib gdi32.lib");
+			ADD_FLAG("LIBS_PHAR", "libcrypto.lib gdi32.lib");
 			if (PHP_DEBUG == "no") {
 				/* Silence irrelevant-to-us warning in release builds */
 				ADD_FLAG("LDFLAGS_PHAR", "/IGNORE:4089 ");
diff --git "a/ext/gmp/gmp.c" "b/ext/gmp/gmp.c"
index 29974c6386..28d304e072 100644
--- "a/ext/gmp/gmp.c"
+++ "b/ext/gmp/gmp.c"
@@ -36,10 +36,10 @@
 #define GMP_ROUND_PLUSINF   1
 #define GMP_ROUND_MINUSINF  2
 
-#ifdef mpir_version
-#define GMP_MPIR_VERSION_STRING ((char *) mpir_version)
+#ifdef _MSC_MPIR_VERSION
+#define GMP_MPIR_VERSION_STRING ((char *) _MSC_MPIR_VERSION)
 #endif
-#define GMP_VERSION_STRING ((char *) gmp_version)
+#define GMP_VERSION_STRING ((char *) GMP_VERSION)
 
 #define GMP_MSW_FIRST     (1 << 0)
 #define GMP_LSW_FIRST     (1 << 1)
@@ -568,10 +568,10 @@ ZEND_MODULE_INFO_D(gmp)
 {
 	php_info_print_table_start();
 	php_info_print_table_row(2, "gmp support", "enabled");
-#ifdef mpir_version
-	php_info_print_table_row(2, "MPIR version", mpir_version);
+#ifdef _MSC_MPIR_VERSION
+	php_info_print_table_row(2, "MPIR version", _MSC_MPIR_VERSION);
 #else
-	php_info_print_table_row(2, "GMP version", gmp_version);
+	php_info_print_table_row(2, "GMP version", GMP_VERSION);
 #endif
 	php_info_print_table_end();
 }
diff --git "a/ext/libxml/config.w32" "b/ext/libxml/config.w32"
index b11c57bc44..7f15920f29 100644
--- "a/ext/libxml/config.w32"
+++ "b/ext/libxml/config.w32"
@@ -3,8 +3,10 @@
 ARG_WITH("libxml", "LibXML support", "yes");
 
 if (PHP_LIBXML == "yes") {
-	if (CHECK_LIB("libxml2_a_dll.lib;libxml2_a.lib", "libxml") &&
-			CHECK_LIB("libiconv_a.lib;iconv_a.lib;libiconv.lib;iconv.lib", "libxml") &&
+	if (CHECK_LIB("libxml2_a_dll.lib", "libxml") &&
+	    CHECK_LIB("libiconv.lib", "libxml") &&
+	    CHECK_LIB("liblzma.lib", "libxml") &&
+	    CHECK_LIB("icuuc.lib", "libxml") &&
 			CHECK_HEADER_ADD_INCLUDE("libxml/parser.h", "CFLAGS_LIBXML", PHP_PHP_BUILD + "\\include\\libxml2") &&
 			CHECK_HEADER_ADD_INCLUDE("libxml/tree.h", "CFLAGS_LIBXML", PHP_PHP_BUILD + "\\include\\libxml2") &&
 			ADD_EXTENSION_DEP('libxml', 'iconv')) {
