 CMakeLists.txt        |  16 +++++++
 cmake/FindMySQL.cmake | 113 ++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 129 insertions(+)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index dc2e79bf7..8de28faf2 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -51,6 +51,7 @@ set_property(CACHE APR_XML_BACKEND PROPERTY STRINGS "expat;libxml2;xmllite")
 
 option(APR_INSTALL_PRIVATE_H  "Install selected private .h files (for httpd)"  OFF)
 option(APU_HAVE_SQLITE3     "Build SQLite3 DBD driver"     OFF)
+option(APU_HAVE_MYSQL       "Build MySQL DBD driver"     OFF)
 option(APU_HAVE_PGSQL       "Build PostgreSQL DBD driver"  OFF)
 option(APU_HAVE_CRYPTO      "Crypto support"               OFF)
 option(APU_HAVE_ICONV       "Xlate support"                OFF)
@@ -108,6 +109,10 @@ if(APU_HAVE_SQLITE3)
   find_package(SQLite3 REQUIRED)
 endif()
 
+if(APU_HAVE_MYSQL)
+  find_package(MySQL REQUIRED)
+endif()
+
 if(APU_HAVE_PGSQL)
   find_package(PostgreSQL REQUIRED)
 endif()
@@ -532,6 +537,16 @@ if(APU_HAVE_SQLITE3)
   )
 endif()
 
+if(APU_HAVE_MYSQL)
+  list(APPEND dbd_drivers mysql)
+
+  ADD_APR_MODULE(
+    apr_dbd_mysql-2 "apr_dbd_mysql-1"
+    "dbd/apr_dbd_mysql.c"
+    "MySQL::MySQL"
+  )
+endif()
+
 if(APU_HAVE_PGSQL)
   list(APPEND dbd_drivers pgsql)
 
@@ -769,6 +784,7 @@ message(STATUS "  C compiler ...................... : ${CMAKE_C_COMPILER}")
 message(STATUS "  IPv6 ............................ : ${APR_HAVE_IPV6}")
 message(STATUS "  DBD ODBC driver ................. : ${APU_HAVE_ODBC}")
 message(STATUS "  DBD SQLite3 driver .............. : ${APU_HAVE_SQLITE3}")
+message(STATUS "  DBD MySQL driver ................ : ${APU_HAVE_MySQL}")
 message(STATUS "  DBD PostgreSQL .................. : ${APU_HAVE_PGSQL}")
 message(STATUS "  XML backend ..................... : ${APR_XML_BACKEND}")
 message(STATUS "  Have Crypto ..................... : ${APU_HAVE_CRYPTO}")
diff --git a/cmake/FindMySQL.cmake b/cmake/FindMySQL.cmake
new file mode 100644
index 000000000..2b458602d
--- /dev/null
+++ b/cmake/FindMySQL.cmake
@@ -0,0 +1,113 @@
+#[==[
+https://github.com/Kitware/VTK/blob/master/CMake/FindMySQL.cmake
+Provides the following variables:
+
+  * `MySQL_INCLUDE_DIRS`: Include directories necessary to use MySQL.
+  * `MySQL_LIBRARIES`: Libraries necessary to use MySQL.
+  * A `MySQL::MySQL` imported target.
+#]==]
+
+# No .pc files are shipped with MySQL on Windows.
+set(_MySQL_use_pkgconfig 0)
+if (NOT WIN32)
+  find_package(PkgConfig)
+  if (PkgConfig_FOUND)
+    set(_MySQL_use_pkgconfig 1)
+  endif ()
+endif ()
+
+if (_MySQL_use_pkgconfig)
+  pkg_check_modules(_libmariadb "libmariadb" QUIET IMPORTED_TARGET)
+  unset(_mysql_target)
+  if (_libmariadb_FOUND)
+    set(_mysql_target "_libmariadb")
+  else ()
+    pkg_check_modules(_mariadb "mariadb" QUIET IMPORTED_TARGET)
+    if (NOT _mariadb_FOUND)
+      pkg_check_modules(_mysql "mysql" QUIET IMPORTED_TARGET)
+      if (_mysql_FOUND)
+        set(_mysql_target "_mysql")
+      endif ()
+    else ()
+      set(_mysql_target "_mariadb")
+      if (_mariadb_VERSION VERSION_LESS 10.4)
+        get_property(_include_dirs
+          TARGET    "PkgConfig::_mariadb"
+          PROPERTY  "INTERFACE_INCLUDE_DIRECTORIES")
+        # Remove "${prefix}/mariadb/.." from the interface since it breaks other
+        # projects.
+        list(FILTER _include_dirs EXCLUDE REGEX "\\.\\.")
+        set_property(TARGET "PkgConfig::_mariadb"
+          PROPERTY
+            "INTERFACE_INCLUDE_DIRECTORIES" "${_include_dirs}")
+        unset(_include_dirs)
+      endif ()
+    endif ()
+  endif ()
+
+  set(MySQL_FOUND 0)
+  if (_mysql_target)
+    set(MySQL_FOUND 1)
+    set(MySQL_INCLUDE_DIRS ${${_mysql_target}_INCLUDE_DIRS})
+    set(MySQL_LIBRARIES ${${_mysql_target}_LINK_LIBRARIES})
+    if (NOT TARGET MySQL::MySQL)
+      add_library(MySQL::MySQL INTERFACE IMPORTED)
+      target_link_libraries(MySQL::MySQL
+        INTERFACE "PkgConfig::${_mysql_target}")
+    endif ()
+  endif ()
+  unset(_mysql_target)
+else ()
+  set(_MySQL_mariadb_versions 10.2 10.3)
+  set(_MySQL_versions 5.0)
+  set(_MySQL_paths)
+  foreach (_MySQL_version IN LISTS _MySQL_mariadb_versions)
+    list(APPEND _MySQL_paths
+      "[HKEY_LOCAL_MACHINE\\SOFTWARE\\MariaDB ${_MySQL_version};INSTALLDIR]"
+      "[HKEY_LOCAL_MACHINE\\SOFTWARE\\MariaDB ${_MySQL_version} (x64);INSTALLDIR]")
+  endforeach ()
+  foreach (_MySQL_version IN LISTS _MySQL_versions)
+    list(APPEND _MySQL_paths
+      "C:/Program Files/MySQL/MySQL Server ${_MySQL_version}/lib/opt"
+      "[HKEY_LOCAL_MACHINE\\SOFTWARE\\MySQL AB\\MySQL Server ${_MySQL_version};Location]"
+      "[HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\MySQL AB\\MySQL Server ${_MySQL_version};Location]")
+  endforeach ()
+  unset(_MySQL_version)
+  unset(_MySQL_versions)
+  unset(_MySQL_mariadb_versions)
+
+  find_path(MySQL_INCLUDE_DIR
+    NAMES mysql.h
+    PATHS
+      "C:/Program Files/MySQL/include"
+      "C:/MySQL/include"
+      ${_MySQL_paths}
+    PATH_SUFFIXES include include/mysql
+    DOC "Location of mysql.h")
+  mark_as_advanced(MySQL_INCLUDE_DIR)
+  find_library(MySQL_LIBRARY
+    NAMES libmariadb mysql libmysql mysqlclient
+    PATHS
+      "C:/Program Files/MySQL/lib"
+      "C:/MySQL/lib/debug"
+      ${_MySQL_paths}
+    PATH_SUFFIXES lib lib/opt
+    DOC "Location of the mysql library")
+  mark_as_advanced(MySQL_LIBRARY)
+
+  include(FindPackageHandleStandardArgs)
+  find_package_handle_standard_args(MySQL
+    REQUIRED_VARS MySQL_INCLUDE_DIR MySQL_LIBRARY)
+
+  if (MySQL_FOUND)
+    set(MySQL_INCLUDE_DIRS "${MySQL_INCLUDE_DIR}")
+    set(MySQL_LIBRARIES "${MySQL_LIBRARY}")
+    if (NOT TARGET MySQL::MySQL)
+      add_library(MySQL::MySQL UNKNOWN IMPORTED)
+      set_target_properties(MySQL::MySQL PROPERTIES
+      IMPORTED_LOCATION "${MySQL_LIBRARY}"
+        INTERFACE_INCLUDE_DIRECTORIES "${MySQL_INCLUDE_DIR}")
+    endif ()
+  endif ()
+endif ()
+unset(_MySQL_use_pkgconfig)
