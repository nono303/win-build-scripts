Index: mobac/build.gradle
===================================================================
--- mobac/build.gradle	(revision 2683)
+++ mobac/build.gradle	(working copy)
@@ -1,11 +1,10 @@
 plugins {
     id 'java-library'
-    id 'edu.sc.seis.launch4j' version '2.5.2'
+    id 'edu.sc.seis.launch4j' version '2.5.3'
 }
 
 dependencies {
-    def mapsforgeVersion = '0.18.0'
-    // def mapsforgeVersion = 'master-SNAPSHOT'
+    def mapsforgeVersion = '0.18.0'
 
     implementation "org.mapsforge:mapsforge-core:${mapsforgeVersion}"
     implementation "org.mapsforge:mapsforge-map:${mapsforgeVersion}"
@@ -18,22 +17,22 @@
     api 'org.apache.commons:commons-lang3:3.12.0'
     api 'org.apache.commons:commons-text:1.9'
     api 'com.github.kerner1000:javapng:2.1.2'
-    api 'org.xerial:sqlite-jdbc:3.34.0'
-    api 'com.sleepycat:je:5.0.73'
-    api 'org.glassfish.jaxb:jaxb-runtime:3.0.2'
-    api 'org.slf4j:slf4j-api:1.7.36'
-    implementation 'ch.qos.logback:logback-classic:1.2.11'
-    implementation 'org.slf4j:jul-to-slf4j:1.7.36'
+    api 'org.xerial:sqlite-jdbc:3.36.0.3'
+    api 'com.sleepycat:je:18.3.12'
+    api 'org.glassfish.jaxb:jaxb-runtime:4.0.0'
+    api 'org.slf4j:slf4j-api:2.0.0-alpha7'
+    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha16'
+    implementation 'org.slf4j:jul-to-slf4j:2.0.0-alpha7'
     implementation 'net.sf.jtidy:jtidy:r938'
-    implementation 'com.itextpdf:itextpdf:5.1.3'
+    implementation 'com.itextpdf:itextpdf:5.5.13.3'
     implementation 'javax.media:jai-core:1.1.3'
     implementation 'com.sun.media:jai-codec:1.1.3'
-    testImplementation 'org.jboss.resteasy:tjws:2.3.10.Final'
+    testImplementation 'org.jboss.resteasy:tjws:4.0.0.Beta5'
     testImplementation 'junit:junit:4.13.2'
-    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
-    testImplementation 'javax.servlet:servlet-api:2.5'
+    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0-M1'
+    testImplementation 'javax.servlet:servlet-api:4.0.1'
 
-    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
+    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0-M1'
 }
 processResources {
     doLast {
Index: mobac/src/main/java/mobac/gui/components/JMapSizeCombo.java
===================================================================
--- mobac/src/main/java/mobac/gui/components/JMapSizeCombo.java
+++ mobac/src/main/java/mobac/gui/components/JMapSizeCombo.java
@@ -34,15 +34,10 @@
     static {
         // Sizes from 1024 to 32768
         MAP_SIZE_VALUES = new Vector<Integer>(11);
-        MAP_SIZE_VALUES.addElement(128000);
+        MAP_SIZE_VALUES.addElement(DEFAULT = 4194303);
         MAP_SIZE_VALUES.addElement(1048575);
         MAP_SIZE_VALUES.addElement(65536);
-        MAP_SIZE_VALUES.addElement(DEFAULT = 32767);
-        MAP_SIZE_VALUES.addElement(30000);
-        MAP_SIZE_VALUES.addElement(25000);
-        MAP_SIZE_VALUES.addElement(20000);
-        MAP_SIZE_VALUES.addElement(15000);
-        MAP_SIZE_VALUES.addElement(10000);
+        MAP_SIZE_VALUES.addElement(32767);
         MAP_SIZE_VALUES.addElement(2048);
         MAP_SIZE_VALUES.addElement(1024);
     }
Index: mobac/src/main/java/mobac/gui/MainGUI.java
===================================================================
--- mobac/src/main/java/mobac/gui/MainGUI.java
+++ mobac/src/main/java/mobac/gui/MainGUI.java
@@ -150,7 +150,7 @@
 import java.util.List;
 
 public class MainGUI extends JFrame implements MapEventListener {
-    public static final int LEFT_PANEL_MIN_SIZE = 254;
+    public static final int LEFT_PANEL_MIN_SIZE = 270;
     public static final ArrayList<Image> MOBAC_ICONS = new ArrayList<Image>(3);
     private static final long serialVersionUID = 1L;
     private static final int LEFT_PANEL_MARGIN = 2;
@@ -721,6 +721,7 @@
         addLayers.addActionListener(AddMapLayer.INSTANCE);
         atlasContentPanel.addContent(new JLabel(I18nUtils.localizedStringForKey("lp_atlas_name_label_title")), gbc_std);
         atlasContentPanel.addContent(atlasNameTextField, gbc_eol.fill(GBC.HORIZONTAL));
+		atlasContentPanel.setPreferredSize(new Dimension(100, 150));
 
         leftPanelContent = new JPanel(new GridBagLayout());
         leftPanelContent.add(mapSourcePanel, gbc_eol);
Index: mobac/src/main/java/mobac/gui/panels/JMapSourcesPanel.java
===================================================================
--- mobac/src/main/java/mobac/gui/panels/JMapSourcesPanel.java
+++ mobac/src/main/java/mobac/gui/panels/JMapSourcesPanel.java
@@ -42,7 +42,7 @@
         JScrollPane mapSourceTreeScrollPane = new JScrollPane(mapSourceTree, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,
                 JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
 
-        mapSourceTreeScrollPane.setPreferredSize(new Dimension(100, 200));
+        mapSourceTreeScrollPane.setPreferredSize(new Dimension(100, 550));
         mapSourceTreeScrollPane.setAutoscrolls(true);
         addContent(mapSourceTreeScrollPane, GBC.eol().fill().insets(0, 1, 0, 0));
     }
Index: mobac/src/main/java/mobac/gui/settings/SettingsGUI.java
===================================================================
--- mobac/src/main/java/mobac/gui/settings/SettingsGUI.java
+++ mobac/src/main/java/mobac/gui/settings/SettingsGUI.java
@@ -94,7 +94,7 @@
 
     private static final Logger LOG = LoggerFactory.getLogger(SettingsGUI.class);
 
-    private static final Integer[] THREADCOUNT_LIST = {1, 2, 4, 6};
+    private static final Integer[] THREADCOUNT_LIST = { 1, 2, 4, 6, 12, 24 };
 
     private static final long MBIT1 = 1000000 / 8;
     private final Settings settings = Settings.getInstance();
Index: mobac/src/main/java/mobac/program/download/MobacTrustManager.java
===================================================================
--- mobac/src/main/java/mobac/program/download/MobacTrustManager.java
+++ mobac/src/main/java/mobac/program/download/MobacTrustManager.java
@@ -127,7 +127,7 @@
             defaultTrustManager.checkServerTrusted(chain, authType);
         } catch (CertificateException e) {
             X509Certificate cert = chain[0]; // get the leaf certificate
-            log.error("SSL error: " + e.getMessage());
+            log.debug("SSL error: " + e.getMessage());
             synchronized (this) {
                 String pubKeySha256Hash = getPublicKeySha256Hash(cert);
                 if (isCertificateTrusted(pubKeySha256Hash)) {
@@ -136,7 +136,7 @@
                 // TODO: Add GUI for manually adding this certificate as trusted.
                 String message = "Untrusted certificate encountered: publicKeyHash=\"" + pubKeySha256Hash
                         + "\"; certificate issued for " + cert.getSubjectDN();
-                throw new CertificateException(message);
+                log.debug(message);
             }
         }
     }
