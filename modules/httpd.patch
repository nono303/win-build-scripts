diff --git a/CMakeLists.txt b/CMakeLists.txt
index a7b18419dd..5c9e4f55b8 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -15,6 +15,11 @@
 #
 # Read README.cmake before using this.
 
+# SET(mod_md_src "modules/md")
+SET(mod_md_src "../mod_md/src")
+# SET(mod_http2_src "modules/http2")
+SET(mod_http2_src "../mod_h2/mod_http2")
+
 PROJECT(HTTPD C)
 
 CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
@@ -23,7 +28,7 @@ INCLUDE(CheckSymbolExists)
 INCLUDE(CheckCSourceCompiles)
 
 FIND_PACKAGE(LibXml2)
-FIND_PACKAGE(Lua51)
+FIND_PACKAGE(Lua)
 FIND_PACKAGE(OpenSSL)
 FIND_PACKAGE(ZLIB)
 FIND_PACKAGE(CURL)
@@ -225,7 +230,7 @@ MESSAGE(STATUS "")
 MESSAGE(STATUS "Summary of feature detection:")
 MESSAGE(STATUS "")
 MESSAGE(STATUS "LIBXML2_FOUND ............ : ${LIBXML2_FOUND}")
-MESSAGE(STATUS "LUA51_FOUND .............. : ${LUA51_FOUND}")
+MESSAGE(STATUS "LUA_FOUND ................ : ${LUA_FOUND}")
 MESSAGE(STATUS "NGHTTP2_FOUND ............ : ${NGHTTP2_FOUND}")
 MESSAGE(STATUS "OPENSSL_FOUND ............ : ${OPENSSL_FOUND}")
 MESSAGE(STATUS "ZLIB_FOUND ............... : ${ZLIB_FOUND}")
@@ -326,14 +331,14 @@ SET(MODULE_LIST
   "modules/generators/mod_info+I+server information"
   "modules/generators/mod_status+I+process/thread monitoring"
   "modules/http/mod_mime+A+mapping of file-extension to MIME.  Disabling this module is normally not recommended."
-  "modules/http2/mod_http2+i+HTTP/2 protocol support"
+  "${mod_http2_src}/mod_http2+i+HTTP/2 protocol support"
   "modules/ldap/mod_ldap+i+LDAP caching and connection pooling services"
   "modules/loggers/mod_log_config+A+logging configuration.  You won't be able to log requests to the server without this module."
   "modules/loggers/mod_log_debug+I+configurable debug logging"
   "modules/loggers/mod_log_forensic+I+forensic logging"
   "modules/loggers/mod_logio+I+input and output logging"
   "modules/lua/mod_lua+i+Apache Lua Framework"
-  "modules/md/mod_md+i+Apache Managed Domains (Certificates)"
+  "${mod_md_src}/mod_md+i+Apache Managed Domains (Certificates)"
   "modules/mappers/mod_actions+I+Action triggering on requests"
   "modules/mappers/mod_alias+A+mapping of requests to different filesystem parts"
   "modules/mappers/mod_dir+A+directory request handling"
@@ -369,7 +374,7 @@ SET(MODULE_LIST
   "modules/proxy/mod_proxy_hcheck+I+Apache proxy health check module.  Requires and is enabled by --enable-proxy."
   "modules/proxy/mod_proxy_scgi+I+Apache proxy SCGI module.  Requires and is enabled by --enable-proxy."
   "modules/proxy/mod_proxy_wstunnel+I+Apache proxy Websocket Tunnel module.  Requires and is enabled by --enable-proxy."
-  "modules/http2/mod_proxy_http2+i+Apache proxy HTTP/2 module.  Requires --enable-proxy."
+  "${mod_http2_src}/mod_proxy_http2+i+Apache proxy HTTP/2 module.  Requires --enable-proxy."
   "modules/session/mod_session+I+session module"
   "modules/session/mod_session_cookie+I+session cookie module"
   "modules/session/mod_session_crypto+i+session crypto module"
@@ -382,6 +387,12 @@ SET(MODULE_LIST
   "modules/test/mod_optional_fn_import+O+example optional function importer"
   "modules/test/mod_optional_hook_export+O+example optional hook exporter"
   "modules/test/mod_optional_hook_import+O+example optional hook importer"
+  "../mod_maxminddb/src/mod_maxminddb+i+MaxMind DB Apache Module"
+  "../mod_fcgid/modules/fcgid/mod_fcgid+i+FastCGI implementation for Apache HTTP"
+  "../mod_h264_streaming/mod_h264_streaming+i+H264 Streaming Module"
+  "../mod_wku_bt/mod_whatkilledus+i+mod_whatkilledus"
+  "../mod_wku_bt/mod_crash+i+FastCGI mod_crash"
+  "../mod_wku_bt/mod_backtrace+i+mod_backtrace"
 )
 
 # Track which modules actually built have APIs to link against.
@@ -436,18 +447,26 @@ SET(mod_http2_extra_defines          ssize_t=long)
 SET(mod_http2_extra_includes         ${NGHTTP2_INCLUDE_DIR})
 SET(mod_http2_extra_libs             ${NGHTTP2_LIBRARIES})
 SET(mod_http2_extra_sources
-  modules/http2/h2_alt_svc.c
-  modules/http2/h2_bucket_eos.c      modules/http2/h2_config.c
-  modules/http2/h2_conn.c            modules/http2/h2_conn_io.c
-  modules/http2/h2_ctx.c             modules/http2/h2_filter.c
-  modules/http2/h2_from_h1.c         modules/http2/h2_h2.c
-  modules/http2/h2_bucket_beam.c
-  modules/http2/h2_mplx.c            modules/http2/h2_push.c
-  modules/http2/h2_request.c         modules/http2/h2_headers.c
-  modules/http2/h2_session.c         modules/http2/h2_stream.c 
-  modules/http2/h2_switch.c
-  modules/http2/h2_task.c            modules/http2/h2_util.c
-  modules/http2/h2_workers.c
+  ${mod_http2_src}/h2_workers.c
+  ${mod_http2_src}/h2_alt_svc.c
+  ${mod_http2_src}/h2_bucket_beam.c
+  ${mod_http2_src}/h2_bucket_eos.c
+  ${mod_http2_src}/h2_config.c
+  ${mod_http2_src}/h2_conn.c
+  ${mod_http2_src}/h2_conn_io.c
+  ${mod_http2_src}/h2_ctx.c
+  ${mod_http2_src}/h2_filter.c
+  ${mod_http2_src}/h2_from_h1.c
+  ${mod_http2_src}/h2_h2.c
+  ${mod_http2_src}/h2_headers.c
+  ${mod_http2_src}/h2_mplx.c
+  ${mod_http2_src}/h2_push.c
+  ${mod_http2_src}/h2_request.c
+  ${mod_http2_src}/h2_session.c
+  ${mod_http2_src}/h2_stream.c
+  ${mod_http2_src}/h2_switch.c
+  ${mod_http2_src}/h2_task.c
+  ${mod_http2_src}/h2_util.c
 )
 SET(mod_ldap_extra_defines           LDAP_DECLARE_EXPORT)
 SET(mod_ldap_extra_libs              wldap32)
@@ -464,25 +483,42 @@ SET(mod_lua_extra_sources
   modules/lua/lua_passwd.c           modules/lua/lua_request.c
   modules/lua/lua_vmprep.c           modules/lua/lua_dbd.c
 )
-SET(mod_lua_requires                 LUA51_FOUND)
+SET(mod_lua_requires                 LUA_FOUND)
 SET(mod_md_requires                  OPENSSL_FOUND CURL_FOUND JANSSON_FOUND)
 SET(mod_md_extra_includes            ${OPENSSL_INCLUDE_DIR} ${CURL_INCLUDE_DIR} ${JANSSON_INCLUDE_DIR})
 SET(mod_md_extra_libs                ${OPENSSL_LIBRARIES} ${CURL_LIBRARIES} ${JANSSON_LIBRARIES} mod_watchdog)
 SET(mod_md_extra_sources
-  modules/md/md_acme.c               modules/md/md_acme_acct.c
-  modules/md/md_acme_authz.c         modules/md/md_acme_drive.c
-  modules/md/md_acmev1_drive.c       modules/md/md_acmev2_drive.c
-  modules/md/md_acme_order.c         modules/md/md_core.c
-  modules/md/md_curl.c               modules/md/md_crypt.c
-  modules/md/md_http.c               modules/md/md_json.c
-  modules/md/md_jws.c                modules/md/md_log.c
-  modules/md/md_result.c             modules/md/md_reg.c
-  modules/md/md_status.c             modules/md/md_store.c
-  modules/md/md_store_fs.c           modules/md/md_time.c
-  modules/md/md_ocsp.c               modules/md/md_util.c               
-  modules/md/mod_md_config.c         modules/md/mod_md_drive.c
-  modules/md/mod_md_os.c             modules/md/mod_md_status.c
-  modules/md/mod_md_ocsp.c
+  ${mod_md_src}/mod_md_config.c
+  ${mod_md_src}/mod_md_drive.c
+  ${mod_md_src}/mod_md_ocsp.c
+  ${mod_md_src}/mod_md_os.c
+  ${mod_md_src}/mod_md_status.c
+  ${mod_md_src}/md_acme.c
+  ${mod_md_src}/md_acme_acct.c
+  ${mod_md_src}/md_acme_authz.c
+  ${mod_md_src}/md_acme_drive.c
+  ${mod_md_src}/md_acme_order.c
+  ${mod_md_src}/md_acmev2_drive.c
+  ${mod_md_src}/md_cmd_acme.c
+  ${mod_md_src}/md_cmd_main.c
+  ${mod_md_src}/md_cmd_reg.c
+  ${mod_md_src}/md_cmd_store.c
+  ${mod_md_src}/md_core.c
+  ${mod_md_src}/md_crypt.c
+  ${mod_md_src}/md_curl.c
+  ${mod_md_src}/md_event.c
+  ${mod_md_src}/md_http.c
+  ${mod_md_src}/md_json.c
+  ${mod_md_src}/md_jws.c
+  ${mod_md_src}/md_log.c
+  ${mod_md_src}/md_ocsp.c
+  ${mod_md_src}/md_reg.c
+  ${mod_md_src}/md_result.c
+  ${mod_md_src}/md_status.c
+  ${mod_md_src}/md_store.c
+  ${mod_md_src}/md_store_fs.c
+  ${mod_md_src}/md_time.c
+  ${mod_md_src}/md_util.c
 )
 SET(mod_optional_hook_export_extra_defines AP_DECLARE_EXPORT) # bogus reuse of core API prefix
 SET(mod_proxy_extra_defines          PROXY_DECLARE_EXPORT)
@@ -512,7 +548,8 @@ SET(mod_proxy_http2_extra_defines          ssize_t=long)
 SET(mod_proxy_http2_extra_includes         ${NGHTTP2_INCLUDE_DIR})
 SET(mod_proxy_http2_extra_libs             ${NGHTTP2_LIBRARIES} mod_proxy)
 SET(mod_proxy_http2_extra_sources
-  modules/http2/h2_proxy_session.c   modules/http2/h2_proxy_util.c
+  ${mod_http2_src}/h2_proxy_session.c
+  ${mod_http2_src}/h2_proxy_util.c
 )
 SET(mod_ratelimit_extra_defines      AP_RL_DECLARE_EXPORT)
 SET(mod_sed_extra_sources
@@ -551,6 +588,46 @@ IF(LIBXML2_FOUND)
   SET(mod_xml2enc_extra_libs         "${LIBXML2_LIBRARIES};${LIBXML2_ICONV_LIBRARIES}")
 ENDIF()
 SET(mod_watchdog_extra_defines       AP_WD_DECLARE_EXPORT)
+SET(mod_fcgid_extra_sources
+../mod_fcgid/modules/fcgid/fcgid_bridge.c
+../mod_fcgid/modules/fcgid/fcgid_bucket.c
+../mod_fcgid/modules/fcgid/fcgid_conf.c
+../mod_fcgid/modules/fcgid/fcgid_filter.c
+../mod_fcgid/modules/fcgid/fcgid_mutex_unix.c
+../mod_fcgid/modules/fcgid/fcgid_pm_main.c
+#../mod_fcgid/modules/fcgid/fcgid_pm_unix.c
+../mod_fcgid/modules/fcgid/fcgid_pm_win.c
+#../mod_fcgid/modules/fcgid/fcgid_proc_unix.c
+../mod_fcgid/modules/fcgid/fcgid_proc_win.c
+#../mod_fcgid/modules/fcgid/fcgid_proctbl_unix.c
+../mod_fcgid/modules/fcgid/fcgid_proctbl_win.c
+../mod_fcgid/modules/fcgid/fcgid_protocol.c
+../mod_fcgid/modules/fcgid/fcgid_spawn_ctl.c
+)
+SET(mod_h264_streaming_extra_sources
+../mod_h264_streaming/mp4_io.c
+../mod_h264_streaming/output_mp4.c
+../mod_h264_streaming/output_bucket.c
+../mod_h264_streaming/mp4_writer.c
+../mod_h264_streaming/mp4_reader.c
+../mod_h264_streaming/mp4_process.c
+../mod_h264_streaming/moov.c
+#../mod_h264_streaming/main.c
+)
+SET(mod_maxminddb_extra_libs			${MAXMIND_LIBRARIES})
+SET(mod_whatkilledus_extra_libs			"dbghelp.lib")
+SET(mod_whatkilledus_extra_sources
+../mod_wku_bt/mod_whatkilledus.c
+../mod_wku_bt/diag.c		
+)
+SET(mod_backtrace_extra_libs			"dbghelp.lib")
+SET(mod_backtrace_extra_sources
+../mod_wku_bt/mod_backtrace.c
+../mod_wku_bt/diag.c		
+)
+SET(mod_crash_extra_sources
+../mod_wku_bt/mod_crash.c
+)
 
 SET(MODULE_PATHS)
 FOREACH (modinfo ${MODULE_LIST})
@@ -610,7 +687,7 @@ ELSE()
 ENDIF()
 
 # for easy reference from .dll/.so builds
-CONFIGURE_FILE(os/win32/BaseAddr.ref ${PROJECT_BINARY_DIR}/ COPYONLY)
+# CONFIGURE_FILE(os/win32/BaseAddr.ref ${PROJECT_BINARY_DIR}/ COPYONLY)
 
 ADD_EXECUTABLE(gen_test_char server/gen_test_char.c)
 GET_TARGET_PROPERTY(GEN_TEST_CHAR_EXE gen_test_char LOCATION)
@@ -695,8 +772,8 @@ SET(HTTPD_INCLUDE_DIRECTORIES
   ${CMAKE_CURRENT_SOURCE_DIR}/modules/dav/main
   ${CMAKE_CURRENT_SOURCE_DIR}/modules/filters
   ${CMAKE_CURRENT_SOURCE_DIR}/modules/generators
-  ${CMAKE_CURRENT_SOURCE_DIR}/modules/http2
-  ${CMAKE_CURRENT_SOURCE_DIR}/modules/md
+  ${CMAKE_CURRENT_SOURCE_DIR}/${mod_http2_src}
+  ${CMAKE_CURRENT_SOURCE_DIR}/${mod_md_src}
   ${CMAKE_CURRENT_SOURCE_DIR}/modules/proxy
   ${CMAKE_CURRENT_SOURCE_DIR}/modules/session
   ${CMAKE_CURRENT_SOURCE_DIR}/modules/ssl
@@ -704,6 +781,9 @@ SET(HTTPD_INCLUDE_DIRECTORIES
   ${CMAKE_CURRENT_SOURCE_DIR}/server/mpm/winnt
   ${APR_INCLUDE_DIR}
   ${PCRE_INCLUDE_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}/../mod_fcgid/modules/fcgid
+  ${CMAKE_CURRENT_SOURCE_DIR}/../mod_h264_streaming
+  ${CMAKE_CURRENT_SOURCE_DIR}/../mod_wku_bt
 )
 
 # The .h files we install from outside the main include directory
@@ -721,7 +801,7 @@ SET(other_installed_h
   ${CMAKE_CURRENT_SOURCE_DIR}/modules/filters/mod_xml2enc.h
   ${CMAKE_CURRENT_SOURCE_DIR}/modules/generators/mod_cgi.h
   ${CMAKE_CURRENT_SOURCE_DIR}/modules/generators/mod_status.h
-  ${CMAKE_CURRENT_SOURCE_DIR}/modules/http2/mod_http2.h
+  ${CMAKE_CURRENT_SOURCE_DIR}/${mod_http2_src}/mod_http2.h
   ${CMAKE_CURRENT_SOURCE_DIR}/modules/loggers/mod_log_config.h
   ${CMAKE_CURRENT_SOURCE_DIR}/modules/mappers/mod_rewrite.h
   ${CMAKE_CURRENT_SOURCE_DIR}/modules/proxy/mod_proxy.h
@@ -818,7 +898,7 @@ FOREACH (mod ${MODULE_PATHS})
     SET(mod_extra_libs "${mod_name}_extra_libs")
     SET_TARGET_PROPERTIES(${mod_name} PROPERTIES
       SUFFIX .so
-      LINK_FLAGS /base:@${PROJECT_BINARY_DIR}/BaseAddr.ref,${mod_name}.so
+      LINK_FLAGS /dynamicbase 
     )
     TARGET_LINK_LIBRARIES(${mod_name} ${${mod_extra_libs}} libhttpd ${EXTRA_LIBS} ${APR_LIBRARIES} ${HTTPD_SYSTEM_LIBS})
     DEFINE_WITH_BLANKS(define_long_name "LONG_NAME" "${mod_name} for Apache HTTP Server")
@@ -844,7 +924,7 @@ ENDFOREACH()
 ###########   HTTPD LIBRARIES   ############
 ADD_LIBRARY(libhttpd SHARED ${LIBHTTPD_SOURCES} build/win32/httpd.rc)
 SET_TARGET_PROPERTIES(libhttpd PROPERTIES
-  LINK_FLAGS /base:@${PROJECT_BINARY_DIR}/BaseAddr.ref,libhttpd.dll
+  LINK_FLAGS /dynamicbase 
 )
 SET(install_targets ${install_targets} libhttpd)
 SET(install_bin_pdb ${install_bin_pdb} $<TARGET_PDB_FILE:libhttpd>)
@@ -899,12 +979,12 @@ ENDIF()
 GET_PROPERTY(tmp_includes TARGET ab PROPERTY INCLUDE_DIRECTORIES)
 
 # getting duplicate manifest error with ApacheMonitor
-# ADD_EXECUTABLE(ApacheMonitor support/win32/ApacheMonitor.c support/win32/ApacheMonitor.rc)
-# SET(install_targets ${install_targets} ApacheMonitor)
-# SET(install_bin_pdb ${install_bin_pdb} $<TARGET_PDB_FILE:ApacheMonitor>)
-# SET_TARGET_PROPERTIES(ApacheMonitor PROPERTIES WIN32_EXECUTABLE TRUE)
-# SET_TARGET_PROPERTIES(ApacheMonitor PROPERTIES COMPILE_FLAGS "-DAPP_FILE -DLONG_NAME=ApacheMonitor -DBIN_NAME=ApacheMonitor.exe ${EXTRA_COMPILE_FLAGS}")
-# TARGET_LINK_LIBRARIES(ApacheMonitor ${EXTRA_LIBS} ${HTTPD_SYSTEM_LIBS} comctl32 wtsapi32)
+ADD_EXECUTABLE(ApacheMonitor support/win32/ApacheMonitor.c support/win32/ApacheMonitor.rc)
+SET(install_targets ${install_targets} ApacheMonitor)
+SET(install_bin_pdb ${install_bin_pdb} $<TARGET_PDB_FILE:ApacheMonitor>)
+SET_TARGET_PROPERTIES(ApacheMonitor PROPERTIES WIN32_EXECUTABLE TRUE)
+SET_TARGET_PROPERTIES(ApacheMonitor PROPERTIES COMPILE_FLAGS "-DAPP_FILE -DLONG_NAME=ApacheMonitor -DBIN_NAME=ApacheMonitor.exe ${EXTRA_COMPILE_FLAGS}")
+TARGET_LINK_LIBRARIES(ApacheMonitor ${EXTRA_LIBS} ${HTTPD_SYSTEM_LIBS} comctl32 wtsapi32)
 
 ###########  CONFIGURATION FILES ###########
 # Set up variables used in the .conf file templates
diff --git a/modules/proxy/mod_proxy_fcgi.c b/modules/proxy/mod_proxy_fcgi.c
index 2e97408f3f..dfd0c1b396 100644
--- a/modules/proxy/mod_proxy_fcgi.c
+++ b/modules/proxy/mod_proxy_fcgi.c
@@ -357,6 +357,10 @@ static apr_status_t send_environment(proxy_conn_rec *conn, request_rec *r,
 
         if (newfname) {
             newfname = ap_strchr(newfname, '/');
+			// Windows
+			if ((ap_strstr(newfname, ":/")) != NULL)
+				memmove(newfname, newfname+1, strlen(newfname));
+			ap_log_rerror(APLOG_MARK, APLOG_DEBUG, 0, r, APLOGNO(01078) "SCRIPT_FILENAME %s", newfname);
             r->filename = newfname;
         }
     }
diff --git a/server/main.c b/server/main.c
index 62e06df045..13ef956b2c 100644
--- a/server/main.c
+++ b/server/main.c
@@ -44,6 +44,13 @@
 #if APR_HAVE_UNISTD_H
 #include <unistd.h>
 #endif
+/* The following logic ensures we correctly glue FILE* within one CRT used
+ * by the OpenSSL library build to another CRT used by the ab.exe build.
+ * This became especially problematic with Visual Studio 2015.
+ * https://www.apachelounge.com/viewtopic.php?p=33600 
+ * C:\sdk\src\openssl\ms\applink.c
+*/
+#include <ms/applink.c>
 
 /* WARNING: Win32 binds http_main.c dynamically to the server. Please place
  *          extern functions and global data in another appropriate module.
diff --git a/support/ab.c b/support/ab.c
index 8205620994..c3f6bbd0b6 100644
--- a/support/ab.c
+++ b/support/ab.c
@@ -174,8 +174,10 @@ typedef STACK_OF(X509) X509_STACK_TYPE;
 /* The following logic ensures we correctly glue FILE* within one CRT used
  * by the OpenSSL library build to another CRT used by the ab.exe build.
  * This became especially problematic with Visual Studio 2015.
- */
-#include <openssl/applink.c>
+ * https://www.apachelounge.com/viewtopic.php?p=33600 
+ * C:\sdk\src\openssl\ms\applink.c
+*/
+#include <ms/applink.c>
 #endif
 
 #endif
diff --git a/support/win32/ApacheMonitor.rc b/support/win32/ApacheMonitor.rc
index d4203bf926..9d8211e830 100644
--- a/support/win32/ApacheMonitor.rc
+++ b/support/win32/ApacheMonitor.rc
@@ -18,6 +18,7 @@
 
 #include "ApacheMonitor.h"
 
+#undef  LONG_NAME
 #define LONG_NAME Apache HTTP Server Monitor
 
 #include "../../build/win32/httpd.rc"
@@ -26,7 +26,7 @@
 IDI_APSRVMON            ICON    DISCARDABLE     "ApacheMonitor.ico"
 IDI_ICOSTOP             ICON    DISCARDABLE     "apstop.ico"
 IDI_ICORUN              ICON    DISCARDABLE     "aprun.ico"
-CREATEPROCESS_MANIFEST_RESOURCE_ID RT_MANIFEST  "ApacheMonitor.manifest"
+// CREATEPROCESS_MANIFEST_RESOURCE_ID RT_MANIFEST  "ApacheMonitor.manifest"
 
 IDD_DLGSERVICES DIALOGEX 0, 0, 350, 192
 STYLE DS_MODALFRAME | DS_SETFOREGROUND | WS_MINIMIZEBOX | WS_VISIBLE | 
diff --git a/modules/lua/mod_lua.c b/modules/lua/mod_lua.c
index c6790ac9df9..372b492eacb 100644
--- a/modules/lua/mod_lua.c
+++ b/modules/lua/mod_lua.c
@@ -342,7 +342,7 @@ static apr_status_t lua_setup_filter_ctx(ap_filter_t* f, request_rec* r, lua_fil
 {
     apr_pool_t *pool;
     ap_lua_vm_spec *spec;
-    int n, rc;
+    int n, rc, nres;
     lua_State *L;
     lua_filter_ctx *ctx;    
     ap_lua_server_cfg *server_cfg = ap_get_module_config(r->server->module_config,
@@ -410,7 +410,7 @@ static apr_status_t lua_setup_filter_ctx(ap_filter_t* f, request_rec* r, lua_fil
             /* If a Lua filter is interested in filtering a request, it must first do a yield, 
              * otherwise we'll assume that it's not interested and pretend we didn't find it.
              */
-            rc = lua_resume(L, 1);
+            rc = lua_resume(L, 1, &nres);
             if (rc == LUA_YIELD) {
                 if (f->frec->providers == NULL) { 
                     /* Not wired by mod_filter */
@@ -432,7 +432,7 @@ static apr_status_t lua_setup_filter_ctx(ap_filter_t* f, request_rec* r, lua_fil
 static apr_status_t lua_output_filter_handle(ap_filter_t *f, apr_bucket_brigade *pbbIn)
 {
     request_rec *r = f->r;
-    int rc;
+    int rc, nres;
     lua_State *L;
     lua_filter_ctx* ctx;
     conn_rec *c = r->connection;
@@ -492,7 +492,7 @@ static apr_status_t lua_output_filter_handle(ap_filter_t *f, apr_bucket_brigade
             lua_setglobal(L, "bucket");
             
             /* If Lua yielded, it means we have something to pass on */
-            if (lua_resume(L, 0) == LUA_YIELD) {
+            if (lua_resume(L, 0, &nres) == LUA_YIELD) {
                 size_t olen;
                 const char* output = lua_tolstring(L, 1, &olen);
                 if (olen > 0) { 
@@ -524,7 +524,7 @@ static apr_status_t lua_output_filter_handle(ap_filter_t *f, apr_bucket_brigade
             apr_bucket *pbktEOS;
             lua_pushnil(L);
             lua_setglobal(L, "bucket");
-            if (lua_resume(L, 0) == LUA_YIELD) {
+            if (lua_resume(L, 0, &nres) == LUA_YIELD) {
                 apr_bucket *pbktOut;
                 size_t olen;
                 const char* output = lua_tolstring(L, 1, &olen);
@@ -558,7 +558,7 @@ static apr_status_t lua_input_filter_handle(ap_filter_t *f,
                                        apr_off_t nBytes) 
 {
     request_rec *r = f->r;
-    int rc, lastCall = 0;
+    int rc, lastCall = 0, nres;
     lua_State *L;
     lua_filter_ctx* ctx;
     conn_rec *c = r->connection;
@@ -621,7 +621,7 @@ static apr_status_t lua_input_filter_handle(ap_filter_t *f,
             lua_setglobal(L, "bucket");
             
             /* If Lua yielded, it means we have something to pass on */
-            if (lua_resume(L, 0) == LUA_YIELD) {
+            if (lua_resume(L, 0, &nres) == LUA_YIELD) {
                 size_t olen;
                 const char* output = lua_tolstring(L, 1, &olen);
                 pbktOut = apr_bucket_heap_create(output, olen, 0, c->bucket_alloc);
@@ -643,7 +643,7 @@ static apr_status_t lua_input_filter_handle(ap_filter_t *f,
             apr_bucket *pbktEOS = apr_bucket_eos_create(c->bucket_alloc);
             lua_pushnil(L);
             lua_setglobal(L, "bucket");
-            if (lua_resume(L, 0) == LUA_YIELD) {
+            if (lua_resume(L, 0, &nres) == LUA_YIELD) {
                 apr_bucket *pbktOut;
                 size_t olen;
                 const char* output = lua_tolstring(L, 1, &olen);
diff --git a/modules/lua/mod_lua.h b/modules/lua/mod_lua.h
index 0e49cdc0d4b..8921b8767df 100644
--- a/modules/lua/mod_lua.h
+++ b/modules/lua/mod_lua.h
@@ -48,7 +48,13 @@
 #if LUA_VERSION_NUM > 501
 /* Load mode for lua_load() */
 #define lua_load(a,b,c,d)  lua_load(a,b,c,d,NULL)
-#define lua_resume(a,b)    lua_resume(a, NULL, b)
+
+#if LUA_VERSION_NUM > 503
+#define lua_resume(a,b,c)    lua_resume(a, NULL, b, c)
+#else
+#define lua_resume(a,b,c)    lua_resume(a, NULL, b)
+#endif
+
 #define luaL_setfuncs_compat(a,b) luaL_setfuncs(a,b,0)
 #else
 #define lua_rawlen(L,i)    lua_objlen(L, (i))
